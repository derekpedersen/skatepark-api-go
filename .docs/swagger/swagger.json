{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/jsons"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "the purpose of this application is to provide an application\nthat is using plain go code to define an API\n\nThis should demonstrate all the possible comment annotations\nthat are available to turn go code into a fully compliant swagger 2.0 spec",
    "title": "Petstore API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "John Doe",
      "url": "http://john.doe.com",
      "email": "john.doe@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/v2",
  "paths": {
    "/skateparks": {
      "get": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will show all available skateparks by default.\nYou can get the skateparks that are out of stock",
        "consumes": [
          "application/json",
          "application/x-protobuf"
        ],
        "produces": [
          "application/json",
          "application/x-protobuf"
        ],
        "schemes": [
          "http",
          "https",
          "ws",
          "wss"
        ],
        "tags": [
          "skateparks"
        ],
        "summary": "Lists skateparks filtered by some parameters.",
        "operationId": "listSkateparks",
        "deprecated": true,
        "responses": {
          "200": {
            "description": "skatepark",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/skatepark"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Album": {
      "description": "Album struct represents the imgur album",
      "type": "object",
      "properties": {
        "description": {
          "type": "object",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "x-go-name": "Description"
              },
              "id": {
                "type": "string",
                "x-go-name": "ID"
              },
              "link": {
                "type": "string",
                "x-go-name": "Link"
              },
              "name": {
                "type": "object",
                "x-go-name": "Name"
              },
              "title": {
                "type": "object",
                "x-go-name": "Title"
              }
            }
          },
          "x-go-name": "Images"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/vendor/github.com/derekpedersen/imgur-go/model"
    },
    "CitySkateparkMap": {
      "description": "CitySkateparkMap is a map of skateparks with the city as a key",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Skateparks"
      },
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/domain"
    },
    "Skateparks": {
      "description": "Skateparks represents the collection of skateparks",
      "type": "array",
      "items": {
        "$ref": "#/definitions/skatepark"
      },
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/domain"
    },
    "StateSkateparkMap": {
      "description": "StateSkateparkMap is a map of skateparks with the state as a key",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/CitySkateparkMap"
      },
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/domain"
    },
    "address": {
      "description": "Address model",
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "x-go-name": "AddressLine1"
        },
        "addressLine2": {
          "type": "string",
          "x-go-name": "AddressLine2"
        },
        "city": {
          "type": "string",
          "x-go-name": "City"
        },
        "googleMaps": {
          "$ref": "#/definitions/googleMaps"
        },
        "state": {
          "type": "string",
          "x-go-name": "State"
        },
        "zipCode": {
          "type": "string",
          "x-go-name": "ZipCode"
        }
      },
      "x-go-name": "Address",
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/model"
    },
    "googleMaps": {
      "description": "GoogleMaps model",
      "type": "object",
      "properties": {
        "ShareLink": {
          "type": "string"
        },
        "embedMap": {
          "type": "string",
          "x-go-name": "EmbedMap"
        }
      },
      "x-go-name": "GoogleMaps",
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/model"
    },
    "healthMessage": {
      "description": "HealthMessage struct represents the alive messaging",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-name": "HealthMessage",
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/model"
    },
    "skatepark": {
      "description": "Skatepark model",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "album": {
          "$ref": "#/definitions/Album"
        },
        "albumId": {
          "type": "string",
          "x-go-name": "AlbumID"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-name": "Skatepark",
      "x-go-package": "github.com/derekpedersen/skatepark-api-go/model"
    }
  }
}